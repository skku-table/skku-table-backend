name: Deploy to Oracle Server

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-jar
          path: build/libs/skku-table-backend.jar  # 빌드된 JAR 파일을 artifact로 업로드

  deploy:
    runs-on: ubuntu-latest
    needs: build  # 'build' job이 완료된 후에 실행

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-jar  # 'build' job에서 업로드한 artifact 다운로드

      - name: Deploy to Oracle Server using SSH
        run: |
          # SSH로 서버에 접속하여 디렉터리 생성
          ssh -o StrictHostKeyChecking=no ubuntu@stage.skkutable.com "cd ~; sudo rm -rf skku-table-backend; git clone https://github.com/skku-table/skku-table-backend.git"

          # build/libs 디렉토리가 없으면 생성
          ssh -o StrictHostKeyChecking=no ubuntu@stage.skkutable.com "mkdir -p ~/skku-table-backend/build/libs"

          # scp 명령어로 JAR 파일을 서버에 전송
          scp -o StrictHostKeyChecking=no skku-table-backend.jar ubuntu@stage.skkutable.com:~/skku-table-backend/build/libs/skku-table-backend.jar

          # Docker Compose로 애플리케이션 실행
          ssh -o StrictHostKeyChecking=no ubuntu@stage.skkutable.com "cd ~/skku-table-backend && docker compose pull && docker compose up -d"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}